{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 3,
    "pending": 0,
    "failures": 1,
    "start": "2024-12-24T08:43:33.866Z",
    "end": "2024-12-24T08:44:55.737Z",
    "duration": 81871,
    "testsRegistered": 4,
    "passPercent": 75,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "f617ed78-074a-410a-9d54-b1be8617e47d",
      "title": "",
      "fullFile": "E:\\Универ\\3 курс\\ТПО\\lab10-11\\test\\test.js",
      "file": "\\test\\test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bbfd526c-09af-4b32-b9e7-7bf7ef8838a9",
          "title": "Web Tests",
          "fullFile": "E:\\Универ\\3 курс\\ТПО\\lab10-11\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Web Tests\"",
              "fullTitle": "Web Tests \"before all\" hook in \"Web Tests\"",
              "timedOut": false,
              "duration": 25437,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  let options = new firefox.Options();\n  fixtures.driver_firefox.args.forEach(arg => options.addArguments(arg));\n  fixtures.driver_firefox.extensions.forEach(ext => options.addExtensions(ext));\n  \n  driver = await new Builder()\n    .forBrowser(fixtures.driver_firefox.browser)\n    .setFirefoxOptions(options)\n    .build();\n} catch (error) {\n  console.error('Failed to initialize driver:', error);\n  throw error;\n}",
              "err": {},
              "uuid": "ae1fa635-198d-4d89-ae64-5979a2144102",
              "parentUUID": "bbfd526c-09af-4b32-b9e7-7bf7ef8838a9",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Web Tests\"",
              "fullTitle": "Web Tests \"after all\" hook in \"Web Tests\"",
              "timedOut": false,
              "duration": 7005,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (driver) {\n  try {\n    await driver.quit();\n  } catch (error) {\n    console.error('Failed to quit driver:', error);\n  }\n}",
              "err": {},
              "uuid": "14b84c1c-a70e-4c20-a669-a5541e28335e",
              "parentUUID": "bbfd526c-09af-4b32-b9e7-7bf7ef8838a9",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Authorization test",
              "fullTitle": "Web Tests Authorization test",
              "timedOut": false,
              "duration": 10181,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = await testAuth(driver);\nassert.strictEqual(result, true);",
              "err": {},
              "uuid": "494c9e23-6ef7-4587-93e2-fac46e85f582",
              "parentUUID": "bbfd526c-09af-4b32-b9e7-7bf7ef8838a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Booking test",
              "fullTitle": "Web Tests Booking test",
              "timedOut": false,
              "duration": 10122,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = await testBooking(driver);\nassert.strictEqual(result, true);",
              "err": {},
              "uuid": "ed394cc6-52e3-4721-8eb5-9e8d14733ef0",
              "parentUUID": "bbfd526c-09af-4b32-b9e7-7bf7ef8838a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Search test",
              "fullTitle": "Web Tests Search test",
              "timedOut": false,
              "duration": 2814,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = await testSearch(driver);\nassert.strictEqual(result, true);",
              "err": {},
              "uuid": "533b5ae7-4023-4b50-84e5-28314c80c8aa",
              "parentUUID": "bbfd526c-09af-4b32-b9e7-7bf7ef8838a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Form elements test",
              "fullTitle": "Web Tests Form elements test",
              "timedOut": false,
              "duration": 26270,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const result = await testFormElement(driver);\nassert.strictEqual(result, true);",
              "err": {
                "message": "AssertionError: Expected values to be strictly equal:\n+ actual - expected\n\n+ undefined\n- true",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ undefined\n- true\n    at Context.<anonymous> (test\\test.js:126:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "aa93b13b-291f-4d4f-a3ce-2496150414d3",
              "parentUUID": "bbfd526c-09af-4b32-b9e7-7bf7ef8838a9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "494c9e23-6ef7-4587-93e2-fac46e85f582",
            "ed394cc6-52e3-4721-8eb5-9e8d14733ef0",
            "533b5ae7-4023-4b50-84e5-28314c80c8aa"
          ],
          "failures": [
            "aa93b13b-291f-4d4f-a3ce-2496150414d3"
          ],
          "pending": [],
          "skipped": [],
          "duration": 49387,
          "root": false,
          "rootEmpty": false,
          "_timeout": 120000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 120000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}